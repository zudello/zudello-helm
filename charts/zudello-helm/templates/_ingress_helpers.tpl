{{- define "zudello.ingress" -}}
{{/* 
Creates an entire ingress given the name of the service, paths to match, domain etc

The preferred way to do this is via an inline config, see below for more details about
each value. For example:

{{ include "zudello.ingress" (list (dict 
    "name" "pipeline-web" 
    "path" "/pipeline"
    "healthPath" "/pipeline/health"
    ) 
  .)
}}

Or a more complex example:

{{ include "zudello.ingress" (list (dict 
    "name" "pipeline-web" 
    "host" "pipeline"
    "path" "/pipeline"
    "healthPath" "/pipeline/health"
    "additionalHosts" (list "app.uk.webexpenses.io" "api")
    "additionalPaths" (list "/alt-path" "/another")
    ) 
  .)
}}


The alternative method to call this is in values.yaml, and passing as an argument to the
template, along with all .Values.

For examples, values.ymal may look like this (with comments):

ingressApp:
  name: "coreapi-web"   # Name of the Ingress resource, and the name of the service to match
  host: "app"           # Uses the getFullDomain template logic to create the full domain, defaults to "api"
  path: "/"             # Path to match, defaults to "/"
  port: 80              # Port to match, defaults to 80
  healthPath: "/"       # Path to match for health checks, optional
  ruleOrder: 0          # Order of the rule in the controller, rarely needed, see the "alb.ingress.kubernetes.io/group.order" annotation
  additionalHosts:      # Additional hosts to match, defaults to empty
    - "app.uk.webexpenses.io"
    - "api"
  additionalPaths:      # Additional paths to match, defaults to empty, eg:
    - "/alt-path"
    - "/another"
  namespace:            # The namespace for this ingress, if different from the values.yaml namespace (which is used by default)

The template would then be called with:
{{ include "zudello.ingress" (list .Values.ingressApp .) }}

NOTE: The trailing "." in the list is critical as this will pass in the full context
of the deployment.

To override a specific item in a cluster, eg: host, in that cluster.yaml, put:

ingressApp:
  host: "app.uk.webexpenses.io"

Implemenation note: The choice of using config in values.yaml allows each cluster to
override the values, and should rarely be needed any more.

*/}}
{{- $ingress:= (index . 0) -}}
{{- $values := (index . 1).Values -}}
{{- $namespace := default $values.namespace $ingress.namespace -}}
{{- $path := default "/" $ingress.path -}}
{{- $port := default "80" $ingress.port -}}
{{- $host := default "api" $ingress.host -}}
{{- $additionalPaths := default (list ) $ingress.additionalPaths -}}
{{- $paths := prepend $additionalPaths $path -}}
{{- $additionalHosts := default (list) $ingress.additionalHosts -}}
{{- $hosts := prepend $additionalHosts $host }}

---
# Generated by zudello.ingress template
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ $namespace | quote }}
  name: {{ $ingress.name }}-ingress-{{ $values.clusterName }}
  annotations:
    alb.ingress.kubernetes.io/group.name: {{ $values.clusterName }}-elb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/tags: "zudello:cluster-name={{ $values.clusterName }}"
{{- if $ingress.ruleOrder }}
    alb.ingress.kubernetes.io/group.order: {{ $ingress.ruleOrder | quote }}
{{- end }}
{{- if $ingress.healthPath }}
    alb.ingress.kubernetes.io/healthcheck-path: {{ $ingress.healthPath | quote }}
{{- end }}
spec:
  rules:
  {{- range $hosts }}
    - host: {{ (include "zudello.getFullDomain" .) }}
      http:
        paths:
        {{- range $paths }}
          - path: {{ . }}
            pathType: Prefix
            backend:
              service:
                name: {{ $ingress.name}}
                port:
                  number: {{ $port | int }}
          {{- end }} {{/* range $paths */}}
  {{- end -}}{{/* range $hosts */}}

# End zudello.ingress template
{{ end }} {{/* zudello.ingress */}}
